{
  "name": "gulp-tap",
  "version": "0.1.3",
  "description": "Easiest way to tap into a pipeline",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/geejs/gulp-tap"
  },
  "keywords": [
    "gulpplugin",
    "gulp",
    "gee"
  ],
  "author": {
    "name": "Mario Gutierrez",
    "email": "mario@mgutz.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/geejs/gulp-tap/issues"
  },
  "homepage": "https://github.com/geejs/gulp-tap",
  "dependencies": {
    "event-stream": "~3.1.0"
  },
  "readme": "# gulp-tap\n\nEasily tap into a pipeline.\n\n## Uses\n\nSome filters like `gulp-coffee` process all files. What if you want to process\nall JS and Coffee files in a single pipeline. Use `tap` to filter out `.coffee`\nfiles and process them through the `coffee` filter and let JavaScript files\npass through.\n\n```js\ngulp.src(\"src/**/*.{coffee,js}\")\n    .pipe(tap(function(file, t) {\n        if (path.extname(file.path) === '.coffee') {\n            return t.through(coffee, []);\n        }\n    }))\n    .pipe(gulp.dest('build'));\n```\n\nWhat if you want to change content like add a header? No need for a separate\nfilter, just change the content.\n\n```js\ntap(function(file) {\n    file.contents = Buffer.concat([\n        new Buffer('HEADER'),\n        file.contents\n    ]);\n});\n```\n\nIf you do not return a stream, tap forwards your changes.\n\n\n## License\n\nThe MIT License (MIT)\n",
  "readmeFilename": "README.md",
  "_id": "gulp-tap@0.1.3",
  "dist": {
    "shasum": "b5f14d443155c1a5e1a22d4bf53e3b3e65d2f96c"
  },
  "_from": "gulp-tap@^0.1.1",
  "_resolved": "https://registry.npmjs.org/gulp-tap/-/gulp-tap-0.1.3.tgz"
}
