{"version":3,"sources":["validators.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;YAArC,EAAC,GAAE,YAAqB;AAAE,uBAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;;WAA1D,EAAC,uCAAoB,CAAA,OAAM,AAAC,2BAAkB,CACtC,CAAA,wCAAqB,iDAA2B,CAAA,wCAAqB,GAAK,EAAC,OAAM,uCAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AADtG,UAAM;AAAG,YAAQ;SAAzB,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;AAAtG,OAAG;AAAG,cAAU;AAAG,mBAAe;EAE9B,YAAU,EAHtB,EAAC,YAAoB,CAAA,OAAM,AAAC,WAAkB,CACtC,CAAA,aAAqB,sBAA2B,CAAA,aAAqB,GAAK,EAAC,OAAM,YAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,aAKG,SAAM,WAAS;;AA+CtB,AApDwC,CAAA;AAAxC,AAAI,EAAA,yBAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AAMpB,SAAO,CAAd,UAAgB,CAAA,AAAoB,CAAG;AANzC,SAAK,cAAc,GAMC,CAAA,WAAU,QAAQ,CANA,CAAA;AAOlC,SAAO,CAAA,OAAM,AAAC,CAAC,CAAA,MAAM,CAAC,CAAA,EAAK,CAAA,CAAA,MAAM,GAAK,GAAC,CAAA,CAAI,EAAC,UAAS,CAAG,KAAG,CAAC,EAAI,KAAG,CAAC;EACtE;AAEO,cAAY,CAAnB,UAAqB,CAAA,AAAI,CAAG;AAV9B,SAAK,cAAc,GAAnB,CAAA,MAAK,KAAK,KAA4B,CAAA;AAWlC,SAAO,KAAG,CAAC;EACb;AAEO,QAAM,CAAb,UAAe,UAAS,AAAe;AAdzC,SAAK,cAAc,YAAnB,CAAA,MAAK,YAAY,AAcW,CAAA,IAAG,CAAE,SAAO,CAAC,AAdL,CAAE,CAAA;AAAtC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAed,SAAU,CAAA,AAAoB;AAfzC,WAAK,cAAc,GAeI,CAAA,WAAU,QAAQ,CAfH,CAAA;AAgBhC,AAAI,QAAA,CAAA,GAAE,EAAI,CAAA,WAAU,OAAO,AAAC,CAAC,UAAS,GAAG,SAAC,GAAE,CAAG,CAAA,SAAQ,CAAM;AAC3D,AAAI,UAAA,CAAA,MAAK,EAAI,CAAA,SAAQ,AAAC,CAAC,CAAA,CAAC,CAAC;AACzB,aAAO,CAAA,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAA,CAAI,CAAA,gBAAe,MAAM,AAAC,CAAC,GAAE,CAAG,OAAK,CAAC,CAAA,CAAI,IAAE,CAAC;MACtE,EAAG,GAAC,CAAC,CAAC;AACN,WAAO,CAAA,gBAAe,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAA,CAAI,KAAG,EAAI,IAAE,CAAC;IACnD,CArBuC,CAcC,SAAO,CAdY,CAAA;EAsB7D;AAEO,MAAI,CAAX,UAAa,CAAA,AAAyB;AAxBxC,SAAK,cAAc,GAwBF,CAAA,WAAU,aAAa,CAxBF,CAAA;AAyBlC,AAAI,MAAA,CAAA,GAAE,EAAI,GAAC,CAAC;AACZ,mBAAe,QAAQ,AAAC,CAAC,CAAA,SAAS,GAAG,SAAC,OAAM,CAAG,CAAA,IAAG,CAAM;AACtD,SAAI,CAAA,SAAS,AAAC,CAAC,IAAG,CAAC,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,OAAM,OAAO,CAAC,CAAG;AACjD,+BAAsB,AAAC,CAAC,OAAM,CAAG,IAAE,CAAC,CAAC;MACvC;AAAA,IACF,EAAC,CAAC;AACF,SAAO,CAAA,gBAAe,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAA,CAAI,KAAG,EAAI,IAAE,CAAC;EACnD;AAEO,MAAI,CAAX,UAAa,CAAA,AAAyB;AAlCxC,SAAK,cAAc,GAkCF,CAAA,WAAU,aAAa,CAlCF,CAAA;AAmClC,AAAI,MAAA,CAAA,GAAE,EAAI,GAAC,CAAC;AACZ,cAAU,QAAQ,AAAC,CAAC,CAAA,SAAS,GAAG,SAAC,OAAM,CAAM;AAC3C,SAAI,SAAQ,AAAC,CAAC,OAAM,OAAO,CAAC,CAAG;AAC7B,+BAAsB,AAAC,CAAC,OAAM,CAAG,IAAE,CAAC,CAAC;MACvC;AAAA,IACF,EAAC,CAAC;AACF,SAAO,CAAA,gBAAe,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAA,CAAI,KAAG,EAAI,IAAE,CAAC;EACnD;AAEO,aAAW,CAAlB,UAAoB,OAAM,CAAG,CAAA,GAAE;AAC7B,mBAAe,QAAQ,AAAC,CAAC,OAAM,OAAO,GAAG,SAAC,KAAI,CAAG,CAAA,KAAI,CAAM;AACzD,SAAI,CAAC,gBAAe,SAAS,AAAC,CAAC,GAAE,CAAG,MAAI,CAAC,CAAG;AAC1C,UAAE,CAAE,KAAI,CAAC,EAAI,GAAC,CAAC;MACjB;AAAA,AACA,gBAAU,KAAK,AAAC,CAAC,GAAE,CAAE,KAAI,CAAC,CAAG,QAAM,CAAC,CAAC;IACvC,EAAC,CAAC;EACJ;CAnDmF;AAArF,KAAK,eAAe,AAAC,mCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAKN,WAAU,QAAQ,GALW;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,wCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAK,OACuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,kCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,YAAY,AAcW,CAAA,IAAG,CAAE,SAAO,CAAC,AAdL,GACa;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,gCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAuBT,WAAU,aAAa,GAvBS;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,gCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAiCT,WAAU,aAAa,GAjCS;EAAC,CAAC,CAAC,CAAC;AAoDrD","file":"/Users/tbosch/projects/angular2/modules/angular2/src/forms/validators.js","sourcesContent":["import {isBlank, isPresent} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport * as modelModule from './model';\n\nexport class Validators {\n  static required(c:modelModule.Control) {\n    return isBlank(c.value) || c.value == \"\" ? {\"required\": true} : null;\n  }\n\n  static nullValidator(c:any) {\n    return null;\n  }\n\n  static compose(validators:List<Function>):Function {\n    return function (c:modelModule.Control) {\n      var res = ListWrapper.reduce(validators, (res, validator) => {\n        var errors = validator(c);\n        return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n      }, {});\n      return StringMapWrapper.isEmpty(res) ? null : res;\n    }\n  }\n\n  static group(c:modelModule.ControlGroup) {\n    var res = {};\n    StringMapWrapper.forEach(c.controls, (control, name) => {\n      if (c.contains(name) && isPresent(control.errors)) {\n        Validators._mergeErrors(control, res);\n      }\n    });\n    return StringMapWrapper.isEmpty(res) ? null : res;\n  }\n\n  static array(c:modelModule.ControlArray) {\n    var res = {};\n    ListWrapper.forEach(c.controls, (control) => {\n      if (isPresent(control.errors)) {\n        Validators._mergeErrors(control, res);\n      }\n    });\n    return StringMapWrapper.isEmpty(res) ? null : res;\n  }\n\n  static _mergeErrors(control, res) {\n    StringMapWrapper.forEach(control.errors, (value, error) => {\n      if (!StringMapWrapper.contains(res, error)) {\n        res[error] = [];\n      }\n      ListWrapper.push(res[error], control);\n    });\n  }\n}\n"]}