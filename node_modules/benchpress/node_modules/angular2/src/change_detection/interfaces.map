{"version":3,"sources":["interfaces.js"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/angular2/src/change_detection/interfaces.js","sourcesContent":["import {List} from 'angular2/src/facade/collection';\nimport {Locals} from './parser/locals';\n\nexport class ChangeRecord {\n  bindingMemento:any;\n  change:any;\n\n  constructor(bindingMemento, change) {\n    this.bindingMemento = bindingMemento;\n    this.change = change;\n  }\n\n  //REMOVE IT\n  get currentValue() {\n    return this.change.currentValue;\n  }\n\n  get previousValue() {\n    return this.change.previousValue;\n  }\n}\n\n\n/**\n * CHECK_ONCE means that after calling detectChanges the mode of the change detector\n * will become CHECKED.\n */\nexport const CHECK_ONCE=\"CHECK_ONCE\";\n\n/**\n * CHECKED means that the change detector should be skipped until its mode changes to\n * CHECK_ONCE or CHECK_ALWAYS.\n */\nexport const CHECKED=\"CHECKED\";\n\n/**\n * CHECK_ALWAYS means that after calling detectChanges the mode of the change detector\n * will remain CHECK_ALWAYS.\n */\nexport const CHECK_ALWAYS=\"ALWAYS_CHECK\";\n\n/**\n * DETACHED means that the change detector sub tree is not a part of the main tree and\n * should be skipped.\n */\nexport const DETACHED=\"DETACHED\";\n\nexport class ChangeDispatcher {\n  onRecordChange(directiveMemento, records:List<ChangeRecord>) {}\n}\n\nexport class ChangeDetector {\n  parent:ChangeDetector;\n  mode:string;\n\n  addChild(cd:ChangeDetector) {}\n  removeChild(cd:ChangeDetector) {}\n  remove() {}\n  hydrate(context:any, locals:Locals) {}\n  dehydrate() {}\n  markPathToRootAsCheckOnce() {}\n\n  detectChanges() {}\n  checkNoChanges() {}\n}\n"]}