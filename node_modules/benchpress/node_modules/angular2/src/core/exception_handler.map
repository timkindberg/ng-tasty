{"version":3,"sources":["exception_handler.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;kBAArC,EAAC,GAAE,YAAqB;AAAE,6BAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;EAAlD,WAAS,EAAjB,EAAC,qBAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,sBAAqB,+BAA2B,CAAA,sBAAqB,GAAK,EAAC,OAAM,qBAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AAAtG,YAAQ;AAAG,QAAI;SADvB,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;AACtG,cAAU;AAAG,qBAAiB;AAFtC,AAAI,EAAA,mBAKG,SAAM,iBAAe;;AAM5B,AAXwC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,oBAM3B,IAAG,CAAH,UAAK,KAAI,AAAkC,CAAG;MAAlC,WAAS,6CAAI,KAAG;MAAG,OAAK,6CAAI,KAAG;AACzC,AAAI,MAAA,CAAA,cAAa,EAAI,CAAA,kBAAiB,AAAC,CAAC,UAAS,CAAC,CAAA,CAAI,CAAA,WAAU,KAAK,AAAC,CAAC,UAAS,CAAG,OAAK,CAAC,CAAA,CAAI,WAAS,CAAC;AACvG,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAA,GAAI,IAAI,EAAC,OAAK,GAAM,GAAC,CAAC;AACtD,QAAI,AAAC,EAAC,EAAE,EAAC,MAAI,EAAI,UAAQ,EAAC,kBAAiB,EAAC,eAAa,EAAG,CAAC;EAC/D,MAVmF;AAArF,KAAK,eAAe,AAAC,iCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAGzB,WAAS,AAAC,EAAC,EAHqC;EAAC,CAAC,CAAC,CAAC;AAWrD","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/exception_handler.js","sourcesContent":["import {Injectable} from 'angular2/di';\nimport {isPresent, print} from 'angular2/src/facade/lang';\nimport {ListWrapper, isListLikeIterable} from 'angular2/src/facade/collection';\n\n@Injectable()\nexport class ExceptionHandler {\n  call(error, stackTrace = null, reason = null) {\n    var longStackTrace = isListLikeIterable(stackTrace) ? ListWrapper.join(stackTrace, \"\\n\\n\") : stackTrace;\n    var reasonStr = isPresent(reason) ? `\\n${reason}` : '';\n    print(`${error}${reasonStr}\\nSTACKTRACE:\\n${longStackTrace}`);\n  }\n}\n"]}