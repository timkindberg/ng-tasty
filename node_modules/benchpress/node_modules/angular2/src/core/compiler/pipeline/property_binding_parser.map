{"version":3,"sources":["property_binding_parser.js"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/pipeline/property_binding_parser.js","sourcesContent":["import {isPresent, isBlank, RegExpWrapper, BaseException} from 'angular2/src/facade/lang';\nimport {MapWrapper} from 'angular2/src/facade/collection';\n\nimport {Parser, AST, ExpressionWithSource} from 'angular2/change_detection';\n\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\n\n// TODO(tbosch): Cannot make this const/final right now because of the transpiler...\n// Group 1 = \"bind\"\n// Group 2 = \"var\"\n// Group 3 = \"on\"\n// Group 4 = the identifier after \"bind\", \"var\", or \"on\"\n// Group 5 = idenitifer inside square braces\n// Group 6 = identifier inside parenthesis\n// Group 7 = \"#\"\n// Group 8 = identifier after \"#\"\nvar BIND_NAME_REGEXP = RegExpWrapper.create(\n    '^(?:(?:(?:(bind)|(var)|(on))-(.+))|\\\\[([^\\\\]]+)\\\\]|\\\\(([^\\\\)]+)\\\\)|(#)(.+))$');\n\n/**\n * Parses the property bindings on a single element.\n *\n * Fills:\n * - CompileElement#propertyBindings\n * - CompileElement#eventBindings\n * - CompileElement#variableBindings\n */\nexport class PropertyBindingParser extends CompileStep {\n  _parser:Parser;\n  constructor(parser:Parser) {\n    super();\n    this._parser = parser;\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    if (current.ignoreBindings) {\n      return;\n    }\n\n    var attrs = current.attrs();\n    var newAttrs = MapWrapper.create();\n    var desc = current.elementDescription;\n\n    MapWrapper.forEach(attrs, (attrValue, attrName) => {\n      var bindParts = RegExpWrapper.firstMatch(BIND_NAME_REGEXP, attrName);\n      if (isPresent(bindParts)) {\n        if (isPresent(bindParts[1])) {\n          // match: bind-prop\n          current.addPropertyBinding(bindParts[4], this._parseBinding(attrValue, desc));\n          MapWrapper.set(newAttrs, bindParts[4], attrValue);\n        } else if (isPresent(bindParts[2]) || isPresent(bindParts[7])) {\n          // match: var-name / var-name=\"iden\" / #name / #name=\"iden\"\n          var identifier = (isPresent(bindParts[4]) && bindParts[4] !== '') ?\n              bindParts[4] : bindParts[8];\n          var value = attrValue == '' ? '\\$implicit' : attrValue;\n          current.addVariableBinding(identifier, value);\n          MapWrapper.set(newAttrs, identifier, value);\n        } else if (isPresent(bindParts[3])) {\n          // match: on-event\n          current.addEventBinding(bindParts[4], this._parseAction(attrValue, desc));\n        } else if (isPresent(bindParts[5])) {\n          // match: [prop]\n          current.addPropertyBinding(bindParts[5], this._parseBinding(attrValue, desc));\n          MapWrapper.set(newAttrs, bindParts[5], attrValue);\n        } else if (isPresent(bindParts[6])) {\n          // match: (event)\n          current.addEventBinding(bindParts[6], this._parseAction(attrValue, desc));\n        }\n      } else {\n        var ast = this._parseInterpolation(attrValue, desc);\n        if (isPresent(ast)) {\n          current.addPropertyBinding(attrName, ast);\n        } else {\n          current.addAttribute(attrName, attrValue);\n        }\n      }\n    });\n\n    MapWrapper.forEach(newAttrs, (attrValue, attrName) => {\n      MapWrapper.set(attrs, attrName, attrValue);\n    });\n  }\n\n  _parseInterpolation(input:string, location:string):AST {\n    return this._parser.parseInterpolation(input, location);\n  }\n\n  _parseBinding(input:string, location:string):AST {\n    return this._parser.parseBinding(input, location);\n  }\n\n  _parseAction(input:string, location:string):AST {\n    return this._parser.parseAction(input, location);\n  }\n}\n"]}