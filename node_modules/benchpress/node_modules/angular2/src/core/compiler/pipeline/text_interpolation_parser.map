{"version":3,"sources":["text_interpolation_parser.js"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/pipeline/text_interpolation_parser.js","sourcesContent":["import {RegExpWrapper, StringWrapper, isPresent} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {Parser} from 'angular2/change_detection';\n\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\n\n/**\n * Parses interpolations in direct text child nodes of the current element.\n *\n * Fills:\n * - CompileElement#textNodeBindings\n */\nexport class TextInterpolationParser extends CompileStep {\n  _parser:Parser;\n  constructor(parser:Parser) {\n    super();\n    this._parser = parser;\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    if (!current.compileChildren || current.ignoreBindings) {\n      return;\n    }\n    var element = current.element;\n    var childNodes = DOM.childNodes(DOM.templateAwareRoot(element));\n    for (var i=0; i<childNodes.length; i++) {\n      var node = childNodes[i];\n      if (DOM.isTextNode(node)) {\n        this._parseTextNode(current, node, i);\n      }\n    }\n  }\n\n  _parseTextNode(pipelineElement, node, nodeIndex) {\n    var ast = this._parser.parseInterpolation(DOM.nodeValue(node), pipelineElement.elementDescription);\n    if (isPresent(ast)) {\n      DOM.setText(node, ' ');\n      pipelineElement.addTextNodeBinding(nodeIndex, ast);\n    }\n  }\n}\n"]}