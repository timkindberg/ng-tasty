{"version":3,"sources":["element_binder_builder.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;sBAArC,EAAC,GAAE,YAAqB;AAAE,iCAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;;;;;;;;;WAA1D,EAAC,uCAAoB,CAAA,OAAM,AAAC,2BAAkB,CACtC,CAAA,wCAAqB,iDAA2B,CAAA,wCAAqB,GAAK,EAAC,OAAM,uCAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AADtG,MAAE;AAAG,YAAQ;AAAG,UAAM;SAA9B,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;AAAtG,cAAU;AAAG,OAAG;AAAG,aAAS;AAAG,mBAAe;EAE9C,UAAQ,EAHhB,EAAC,kDAAoB,CAAA,OAAM,AAAC,sCAAkB,CACtC,CAAA,mDAAqB,4DAA2B,CAAA,mDAAqB,GAAK,EAAC,OAAM,kDAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,sCAAoB,CAAA,OAAM,AAAC,6BAAkB,CACtC,CAAA,uCAAqB,gDAA2B,CAAA,uCAAqB,GAAK,EAAC,OAAM,sCAAmB,CAAC,AAD/D,CACgE;AAItG,SAAK;AAAG,sBAAkB;EAE1B,kBAAgB,EAPxB,EAAC,wCAAoB,CAAA,OAAM,AAAC,yBAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;EAQtG,YAAU,EATlB,EAAC,sBAAoB,CAAA,OAAM,AAAC,kBAAkB,CACtC,CAAA,uBAAqB,gCAA2B,CAAA,uBAAqB,GAAK,EAAC,OAAM,sBAAmB,CAAC,AAD/D,CACgE;EAStG,eAAa,EAVrB,EAAC,yBAAoB,CAAA,OAAM,AAAC,qBAAkB,CACtC,CAAA,0BAAqB,mCAA2B,CAAA,0BAAqB,GAAK,EAAC,OAAM,yBAAmB,CAAC,AAD/D,CACgE;EAUtG,eAAa,EAXrB,EAAC,yBAAoB,CAAA,OAAM,AAAC,qBAAkB,CACtC,CAAA,0BAAqB,mCAA2B,CAAA,0BAAqB,GAAK,EAAC,OAAM,yBAAmB,CAAC,AAD/D,CACgE;EAWtG,oBAAkB,EAZ1B,EAAC,kCAAoB,CAAA,OAAM,AAAC,mBAAkB,CACtC,CAAA,mCAAqB,4CAA2B,CAAA,mCAAqB,GAAK,EAAC,OAAM,kCAAmB,CAAC,AAD/D,CACgE;EAYtG,cAAY,EAbpB,EAAC,gDAAoB,CAAA,OAAM,AAAC,8BAAkB,CACtC,CAAA,iDAAqB,0DAA2B,CAAA,iDAAqB,GAAK,EAAC,OAAM,gDAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,uBAuCG,SAAM,qBAAmB,CAElB,MAAK,AAAO,CAAG;AAzC7B,OAAK,cAAc,QAyCE,OAAK,CAzCY,CAAA;AA0ClC,AA1CJ,gBAAc,iBAAiB,AAAC,uBAAkB,KAAK,MAAmB,CA0C/D;AACP,KAAG,QAAQ,EAAI,OAAK,CAAC;AACvB,AA5CsC,CAAA;AAAxC,AAAI,EAAA,6CAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AA8C3B,QAAM,CAAN,UAAQ,MAAK,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG;AA9CjF,SAAK,cAAc,QA8CF,eAAa,UAAW,eAAa,UAAW,eAAa,CA9CxC,CAAA;AA+ClC,AAAI,MAAA,CAAA,aAAY,EAAI,KAAG,CAAC;AACxB,AAAI,MAAA,CAAA,mBAAkB,EAAI,KAAG,CAAC;AAC9B,AAAI,MAAA,CAAA,sBAAqB,EAAI,CAAA,IAAG,2BAA2B,AAAC,CAAC,MAAK,CAAG,QAAM,CAAC,CAAC;AAC7E,OAAI,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAG;AACrB,wBAAkB,EAAI,CAAA,MAAK,uBAAuB,CAAC;IACrD;AAAA,AACA,OAAI,OAAM,YAAY,CAAG;AACvB,AAAI,QAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,mBAAmB,CAAC;AAC1C,AAAI,QAAA,CAAA,qBAAoB,EAAI,CAAA,OAAM,AAAC,CAAC,MAAK,CAAC,CAAA,CAAI,KAAG,EAC7C,CAAA,OAAM,8BAA8B,IAAM,CAAA,MAAK,8BAA8B,CAAC;AAElF,AAAI,QAAA,CAAA,2BAA0B,EAAI,CAAA,qBAAoB,EAClD,CAAA,OAAM,8BAA8B,EAAI,KAAG,CAAC;AAEhD,kBAAY,EAAI,CAAA,SAAQ,YAAY,AAAC,CAAC,mBAAkB,CAAG,uBAAqB,CAC5E,4BAA0B,CAAG,CAAA,OAAM,mBAAmB,CAAG,CAAA,OAAM,kBAAkB,CAAC,CAAC;AACvF,YAAM,uBAAuB,EAAI,EAAA,CAAC;AAElC,SAAI,SAAQ,AAAC,CAAC,OAAM,iBAAiB,CAAC,CAAG;AACvC,WAAG,eAAe,AAAC,CAAC,SAAQ,CAAG,QAAM,CAAC,CAAC;MACzC;AAAA,AACA,SAAI,SAAQ,AAAC,CAAC,OAAM,iBAAiB,CAAC,CAAG;AACvC,WAAG,uBAAuB,AAAC,CAAC,SAAQ,CAAG,QAAM,CAAC,CAAC;MACjD;AAAA,AACA,SAAI,SAAQ,AAAC,CAAC,OAAM,cAAc,CAAC,CAAG;AACpC,WAAG,YAAY,AAAC,CAAC,SAAQ,CAAG,QAAM,CAAC,CAAC;MACtC;AAAA,AACA,SAAI,SAAQ,AAAC,CAAC,OAAM,mBAAmB,CAAC,CAAG;AACzC,oBAAY,mBAAmB,EAAI,CAAA,OAAM,mBAAmB,CAAC;MAC/D;AAAA,AACI,QAAA,CAAA,UAAS,EAAI,CAAA,OAAM,iBAAiB,AAAC,EAAC,CAAC;AAC3C,SAAG,yBAAyB,AAAC,CAAC,UAAS,CAAG,QAAM,CAAC,CAAC;AAClD,SAAG,qBAAqB,AAAC,CAAC,UAAS,CAAG,QAAM,CAAC,CAAC;IAChD,KAAO,KAAI,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAG;AAC5B,kBAAY,EAAI,oBAAkB,CAAC;AACnC,YAAM,uBAAuB,EAAI,uBAAqB,CAAC;IACzD;AAAA,AACA,UAAM,uBAAuB,EAAI,cAAY,CAAC;EAChD;AAEA,2BAAyB,CAAzB,UAA2B,MAAK,CAAG,CAAA,OAAM,CAAG;AAC1C,SAAO,CAAA,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAA,CAAI,CAAA,MAAK,uBAAuB,EAAI,EAAA,CAAA,CAAI,EAAA,CAAC;EAClE;AAEA,eAAa,CAAb,UAAe,SAAQ,CAAG,CAAA,cAAa;AACrC,aAAS,QAAQ,AAAC,CAAC,cAAa,iBAAiB,GAAG,SAAC,UAAS,CAAG,CAAA,aAAY,CAAM;AACjF,cAAQ,aAAa,AAAC,CAAC,aAAY,CAAG,WAAS,CAAC,CAAC;IACnD,EAAC,CAAC;EACJ;AAEA,uBAAqB,CAArB,UAAuB,SAAQ,CAAG,CAAA,cAAa;AAC7C,aAAS,QAAQ,AAAC,CAAC,cAAa,iBAAiB,GAAG,SAAC,UAAS,CAAG,CAAA,QAAO,CAAM;AAC5E,AAAI,QAAA,CAAA,QAAO,EAAI,CAAA,aAAY,AAAC,CAAC,QAAO,CAAC,CAAC;AACtC,cAAQ,oBAAoB,AAAC,CAAC,UAAS,IAAI,CAAG,SAAO,CAAG,SAAO,CAAC,CAAC;IACnE,EAAC,CAAC;EACJ;AAEA,YAAU,CAAV,UAAY,SAAQ,CAAG,CAAA,cAAa;AAClC,aAAS,QAAQ,AAAC,CAAC,cAAa,cAAc,GAAG,SAAC,UAAS,CAAG,CAAA,SAAQ,CAAM;AAC1E,cAAQ,UAAU,AAAC,CAAC,SAAQ,CAAI,WAAS,CAAC,CAAC;IAC7C,EAAC,CAAC;EACJ;AAEA,qBAAmB,CAAnB,UAAqB,UAAS,AAAyB,CAAG,CAAA,cAAa,AAAgB;;AA9GzF,SAAK,cAAc,YAAnB,CAAA,MAAK,YAAY,AA8GkB,CAAA,IAAG,CAAE,kBAAgB,CAAC,AA9GrB,iBA8GwC,eAAa,CA9GnD,CAAA;AA+GlC,QAAS,GAAA,CAAA,cAAa,EAAI,EAAA,CAAG,CAAA,cAAa,EAAI,CAAA,UAAS,OAAO,CAAG,CAAA,cAAa,EAAE,CAAG;AACjF,AAAI,QAAA,CAAA,SAAQ,EAAI,CAAA,UAAS,CAAE,cAAa,CAAC,CAAC;AAC1C,AAAI,QAAA,CAAA,UAAS,EAAI,CAAA,SAAQ,WAAW,CAAC;AACrC,SAAI,OAAM,AAAC,CAAC,UAAS,OAAO,CAAC;AAAG,gBAAQ;AAAA,AACpC,QAAA,CAAA,SAAQ,EAAI,CAAA,cAAa,mBAAmB,CAAC;AACjD,qBAAe,QAAQ,AAAC,CAAC,UAAS,OAAO,GAAG,SAAC,MAAK,CAAG,CAAA,SAAQ,CAAM;AACjE,AAAI,UAAA,CAAA,UAAS,EAAI,CAAA,aAAW,YAAY,AAAC,CAAC,MAAK,CAAG,CAAA,cAAa,mBAAmB,CAAC,CAAC;AACpF,gBAAQ,UAAU,AAAC,CAAC,SAAQ,CAAG,WAAS,CAAG,eAAa,CAAC,CAAC;MAC5D,EAAC,CAAC;IACJ;AAAA,EACF;AAEA,yBAAuB,CAAvB,UAAyB,UAAS,AAAyB,CAClC,CAAA,cAAa,AAAgB;;AA5HxD,SAAK,cAAc,YAAnB,CAAA,MAAK,YAAY,AA2HsB,CAAA,IAAG,CAAE,kBAAgB,CAAC,AA3HzB,iBA4HO,eAAa,CA5HlB,CAAA;AA6HlC,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,cAAa,mBAAmB,CAAC;AAEjD,QAAS,GAAA,CAAA,cAAa,EAAI,EAAA,CAAG,CAAA,cAAa,EAAI,CAAA,UAAS,OAAO,CAAG,CAAA,cAAa,EAAE,CAAG;AACjF,AAAI,QAAA,CAAA,SAAQ,EAAI,CAAA,WAAU,IAAI,AAAC,CAAC,UAAS,CAAG,eAAa,CAAC,CAAC;AAC3D,AAAI,QAAA,CAAA,UAAS,EAAI,CAAA,SAAQ,WAAW,CAAC;AACrC,SAAI,OAAM,AAAC,CAAC,UAAS,KAAK,CAAC;AAAG,gBAAQ;AAAA,AACtC,qBAAe,QAAQ,AAAC,CAAC,UAAS,KAAK,GAAG,SAAC,UAAS,CAAG,CAAA,OAAM,CAAM;AACjE,AAAI,UAAA,CAAA,KAAI,EAAI,CAAA,sBAAoB,AAAC,CAAC,UAAS,CAAC,CAAC;AAC7C,AAAI,UAAA,CAAA,MAAK,EAAI,CAAA,WAAU,SAAS,AAAC,CAAC,KAAI,CAAG,EAAA,CAAC,CAAC;AAE3C,AAAI,UAAA,CAAA,UAAS,EAAI,CAAA,SAAQ,AAAC,CAAC,cAAa,iBAAiB,CAAC,CAAA,CACxD,CAAA,UAAS,IAAI,AAAC,CAAC,cAAa,iBAAiB,CAAG,CAAA,mBAAkB,AAAC,CAAC,MAAK,CAAC,CAAC,CAAA,CACzE,KAAG,CAAC;AAER,WAAI,OAAM,AAAC,CAAC,UAAS,CAAC,CAAG;AACvB,AAAI,YAAA,CAAA,cAAa,EAAI,CAAA,UAAS,IAAI,AAAC,CAAC,cAAa,MAAM,AAAC,EAAC,CAAG,OAAK,CAAC,CAAC;AACnE,aAAI,SAAQ,AAAC,CAAC,cAAa,CAAC,CAAG;AAC7B,qBAAS,EAAI,CAAA,aAAW,qBAAqB,AAAC,CAAC,cAAa,CAAG,CAAA,cAAa,mBAAmB,CAAC,CAAC;UACnG;AAAA,QACF;AAAA,AAGA,WAAI,SAAQ,AAAC,CAAC,UAAS,CAAC,CAAG;AACzB,AAAI,YAAA,CAAA,uBAAsB,EAAI,CAAA,aAAW,SAAS,AAAC,CAAC,UAAS,CAAG,MAAI,CAAC,CAAC;AACtE,kBAAQ,sBAAsB,AAAC,CAC7B,cAAa,CACb,wBAAsB,CACtB,QAAM,CACN,CAAA,SAAQ,OAAO,AAAC,CAAC,mBAAkB,AAAC,CAAC,OAAM,CAAC,CAAC,CAC/C,CAAC;QACH;AAAA,MACF,EAAC,CAAC;IACJ;AAAA,EACF;AAEA,iBAAe,CAAf,UAAiB,UAAS,AAAO;AAC/B,SAAO,CAAA,WAAU,IAAI,AAAC,CAAC,UAAS,MAAM,AAAC,CAAC,GAAE,CAAC,GAAG,SAAC,CAAA;WAAM,CAAA,CAAA,KAAK,AAAC,EAAC;IAAA,EAAC,CAAC;EAChE;KA3HwC,YAAU,CAtCI;AADxD,KAAK,eAAe,AAAC,oCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAwCL,MAAK,GAxCuB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA6CT,cAAa,IAAW,cAAa,IAAW,cAAa,GA7C7B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,mEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,YAAY,AA8GkB,CAAA,IAAG,CAAE,kBAAgB,CAAC,AA9GrB,IA8GwC,cAAa,GA7GxC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,uEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,YAAY,AA2HsB,CAAA,IAAG,CAAE,kBAAgB,CAAC,AA3HzB,IA4HO,cAAa,GA3HP;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,+DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAK,UACuC;EAAC,CAAC,CAAC,CAAC;AAmKrD","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/pipeline/element_binder_builder.js","sourcesContent":["import {int, isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {ListWrapper, List, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {reflector} from 'angular2/src/reflection/reflection';\n\nimport {Parser, ProtoChangeDetector} from 'angular2/change_detection';\n\nimport {DirectiveMetadata} from '../directive_metadata';\n\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nimport {dashCaseToCamelCase} from '../string_utils';\nimport {setterFactory} from '../property_setter_factory'\n\n/**\n * Creates the ElementBinders and adds watches to the\n * ProtoChangeDetector.\n *\n * Fills:\n * - CompileElement#inheritedElementBinder\n *\n * Reads:\n * - (in parent) CompileElement#inheritedElementBinder\n * - CompileElement#hasBindings\n * - CompileElement#inheritedProtoView\n * - CompileElement#inheritedProtoElementInjector\n * - CompileElement#textNodeBindings\n * - CompileElement#propertyBindings\n * - CompileElement#eventBindings\n * - CompileElement#decoratorDirectives\n * - CompileElement#componentDirective\n * - CompileElement#viewportDirective\n *\n * Note: This actually only needs the CompileElements with the flags\n * `hasBindings` and `isViewRoot`,\n * and only needs the actual HTMLElement for the ones\n * with the flag `isViewRoot`.\n */\nexport class ElementBinderBuilder extends CompileStep {\n  _parser:Parser;\n  constructor(parser:Parser) {\n    super();\n    this._parser = parser;\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    var elementBinder = null;\n    var parentElementBinder = null;\n    var distanceToParentBinder = this._getDistanceToParentBinder(parent, current);\n    if (isPresent(parent)) {\n      parentElementBinder = parent.inheritedElementBinder;\n    }\n    if (current.hasBindings) {\n      var protoView = current.inheritedProtoView;\n      var protoInjectorWasBuilt = isBlank(parent) ? true :\n          current.inheritedProtoElementInjector !== parent.inheritedProtoElementInjector;\n\n      var currentProtoElementInjector = protoInjectorWasBuilt ?\n          current.inheritedProtoElementInjector : null;\n\n      elementBinder = protoView.bindElement(parentElementBinder, distanceToParentBinder,\n          currentProtoElementInjector, current.componentDirective, current.viewportDirective);\n      current.distanceToParentBinder = 0;\n\n      if (isPresent(current.textNodeBindings)) {\n        this._bindTextNodes(protoView, current);\n      }\n      if (isPresent(current.propertyBindings)) {\n        this._bindElementProperties(protoView, current);\n      }\n      if (isPresent(current.eventBindings)) {\n        this._bindEvents(protoView, current);\n      }\n      if (isPresent(current.contentTagSelector)) {\n        elementBinder.contentTagSelector = current.contentTagSelector;\n      }\n      var directives = current.getAllDirectives();\n      this._bindDirectiveProperties(directives, current);\n      this._bindDirectiveEvents(directives, current);\n    } else if (isPresent(parent)) {\n      elementBinder = parentElementBinder;\n      current.distanceToParentBinder = distanceToParentBinder;\n    }\n    current.inheritedElementBinder = elementBinder;\n  }\n\n  _getDistanceToParentBinder(parent, current) {\n    return isPresent(parent) ? parent.distanceToParentBinder + 1 : 0;\n  }\n\n  _bindTextNodes(protoView, compileElement) {\n    MapWrapper.forEach(compileElement.textNodeBindings, (expression, indexInParent) => {\n      protoView.bindTextNode(indexInParent, expression);\n    });\n  }\n\n  _bindElementProperties(protoView, compileElement) {\n    MapWrapper.forEach(compileElement.propertyBindings, (expression, property) => {\n      var setterFn = setterFactory(property);\n      protoView.bindElementProperty(expression.ast, property, setterFn);\n    });\n  }\n\n  _bindEvents(protoView, compileElement) {\n    MapWrapper.forEach(compileElement.eventBindings, (expression, eventName) => {\n      protoView.bindEvent(eventName,  expression);\n    });\n  }\n\n  _bindDirectiveEvents(directives: List<DirectiveMetadata>, compileElement: CompileElement) {\n    for (var directiveIndex = 0; directiveIndex < directives.length; directiveIndex++) {\n      var directive = directives[directiveIndex];\n      var annotation = directive.annotation;\n      if (isBlank(annotation.events)) continue;\n      var protoView = compileElement.inheritedProtoView;\n      StringMapWrapper.forEach(annotation.events, (action, eventName) => {\n        var expression = this._parser.parseAction(action, compileElement.elementDescription);\n        protoView.bindEvent(eventName, expression, directiveIndex);\n      });\n    }\n  }\n\n  _bindDirectiveProperties(directives: List<DirectiveMetadata>,\n                           compileElement: CompileElement) {\n    var protoView = compileElement.inheritedProtoView;\n\n    for (var directiveIndex = 0; directiveIndex < directives.length; directiveIndex++) {\n      var directive = ListWrapper.get(directives, directiveIndex);\n      var annotation = directive.annotation;\n      if (isBlank(annotation.bind)) continue;\n      StringMapWrapper.forEach(annotation.bind, (bindConfig, dirProp) => {\n        var pipes = this._splitBindConfig(bindConfig);\n        var elProp = ListWrapper.removeAt(pipes, 0);\n\n        var bindingAst = isPresent(compileElement.propertyBindings) ?\n          MapWrapper.get(compileElement.propertyBindings, dashCaseToCamelCase(elProp)) :\n            null;\n\n        if (isBlank(bindingAst)) {\n          var attributeValue = MapWrapper.get(compileElement.attrs(), elProp);\n          if (isPresent(attributeValue)) {\n            bindingAst = this._parser.wrapLiteralPrimitive(attributeValue, compileElement.elementDescription);\n          }\n        }\n\n        // Bindings are optional, so this binding only needs to be set up if an expression is given.\n        if (isPresent(bindingAst)) {\n          var fullExpAstWithBindPipes = this._parser.addPipes(bindingAst, pipes);\n          protoView.bindDirectiveProperty(\n            directiveIndex,\n            fullExpAstWithBindPipes,\n            dirProp,\n            reflector.setter(dashCaseToCamelCase(dirProp))\n          );\n        }\n      });\n    }\n  }\n\n  _splitBindConfig(bindConfig:string) {\n    return ListWrapper.map(bindConfig.split('|'), (s) => s.trim());\n  }\n}\n"]}