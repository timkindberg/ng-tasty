{"version":3,"sources":["css_processor.js"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/css_processor.js","sourcesContent":["import {Injectable} from 'angular2/di';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {List} from 'angular2/src/facade/collection';\n\nimport {CompileStep} from './pipeline/compile_step';\nimport {CompileElement} from './pipeline/compile_element';\nimport {CompileControl} from './pipeline/compile_control';\n\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\nimport {DirectiveMetadata} from './directive_metadata';\n\n/**\n * Processes the <style> tags during the compilation:\n * - Apply any given transformers,\n * - Apply the shadow DOM strategy style step.\n */\n@Injectable()\nexport class CssProcessor {\n  _transformers: List<CssTransformer>;\n\n  constructor(transformers: List<CssTransformer>) {\n    this._transformers = transformers;\n  }\n\n  /**\n   * Returns a compile step to be added to the compiler pipeline.\n   *\n   * @param {DirectiveMetadata} cmpMetadata\n   * @param {ShadowDomStrategy} shadowDomStrategy\n   * @param {string} templateUrl The base URL of the template\n   */\n  getCompileStep(cmpMetadata: DirectiveMetadata, shadowDomStrategy: ShadowDomStrategy,\n    templateUrl: string) {\n    var strategyStep = shadowDomStrategy.getStyleCompileStep(cmpMetadata, templateUrl);\n    return new _CssProcessorStep(strategyStep, this._transformers);\n  }\n}\n\nexport class CssTransformer {\n  transform(styleElement) {};\n}\n\nclass _CssProcessorStep extends CompileStep {\n  _strategyStep: CompileStep;\n  _transformers: List<CssTransformer>;\n\n  constructor(strategyStep: CompileStep, transformers: List<CssTransformer>) {\n    super();\n    this._strategyStep = strategyStep;\n    this._transformers = transformers;\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    if (DOM.tagName(current.element) == 'STYLE') {\n      current.ignoreBindings = true;\n\n      if (isPresent(this._transformers)) {\n        var styleEl = current.element;\n        for (var i = 0; i < this._transformers.length; i++) {\n          this._transformers[i].transform(styleEl);\n        }\n      }\n\n      if (isPresent(this._strategyStep)) {\n        this._strategyStep.process(parent, current, control);\n      }\n    }\n  }\n}\n"]}