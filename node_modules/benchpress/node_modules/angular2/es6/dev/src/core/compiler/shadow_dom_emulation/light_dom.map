{"version":3,"sources":["light_dom.js"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/shadow_dom_emulation/light_dom.js","sourcesContent":["import {DOM} from 'angular2/src/dom/dom_adapter';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank, isPresent} from 'angular2/src/facade/lang';\n\nimport * as viewModule from '../view';\nimport {Content} from './content_tag';\n\nexport class DestinationLightDom {}\n\n\nclass _Root {\n  node;\n  viewContainer;\n  content;\n\n  constructor(node, viewContainer, content) {\n    this.node = node;\n    this.viewContainer = viewContainer;\n    this.content = content;\n  }\n}\n\n// TODO: LightDom should implement DestinationLightDom\n// once interfaces are supported\nexport class LightDom {\n  // The light DOM of the element is enclosed inside the lightDomView\n  lightDomView:viewModule.View;\n  // The shadow DOM\n  shadowDomView:viewModule.View;\n  // The nodes of the light DOM\n  nodes:List;\n  roots:List<_Root>;\n\n  constructor(lightDomView:viewModule.View, shadowDomView:viewModule.View, element) {\n    this.lightDomView = lightDomView;\n    this.shadowDomView = shadowDomView;\n    this.nodes = DOM.childNodesAsList(element);\n\n    this.roots = null;\n  }\n\n  redistribute() {\n    var tags = this.contentTags();\n    if (tags.length > 0) {\n      redistributeNodes(tags, this.expandedDomNodes());\n    }\n  }\n\n  contentTags(): List<Content> {\n    return this._collectAllContentTags(this.shadowDomView, []);\n  }\n\n  // Collects the Content directives from the view and all its child views\n  _collectAllContentTags(view: viewModule.View, acc:List<Content>):List<Content> {\n    var contentTags = view.contentTags;\n    var vcs = view.viewContainers;\n    for (var i=0; i<vcs.length; i++) {\n      var vc = vcs[i];\n      var contentTag = contentTags[i];\n      if (isPresent(contentTag)) {\n        ListWrapper.push(acc, contentTag);  \n      }\n      if (isPresent(vc)) {\n        ListWrapper.forEach(vc.contentTagContainers(), (view) => {\n          this._collectAllContentTags(view, acc);\n        });              \n      }\n    }\n    return acc;\n  }\n\n  // Collects the nodes of the light DOM by merging:\n  // - nodes from enclosed ViewContainers,\n  // - nodes from enclosed content tags,\n  // - plain DOM nodes\n  expandedDomNodes():List {\n    var res = [];\n    \n    var roots = this._roots();\n    for (var i = 0; i < roots.length; ++i) {\n\n      var root = roots[i];\n\n      if (isPresent(root.viewContainer)) {\n        res = ListWrapper.concat(res, root.viewContainer.nodes());\n      } else if (isPresent(root.content)) {\n        res = ListWrapper.concat(res, root.content.nodes());\n      } else {\n        ListWrapper.push(res, root.node);\n      }\n    }\n    return res;\n  }\n\n  // Returns a list of Roots for all the nodes of the light DOM.\n  // The Root object contains the DOM node and its corresponding injector (could be null).\n  _roots() {\n    if (isPresent(this.roots)) return this.roots;\n\n    var viewContainers = this.lightDomView.viewContainers;\n    var contentTags = this.lightDomView.contentTags;\n\n    this.roots = ListWrapper.map(this.nodes, (n) => {\n      var foundVc = null;\n      var foundContentTag = null;\n      for (var i=0; i<viewContainers.length; i++) {\n        var vc = viewContainers[i];\n        var contentTag = contentTags[i];\n        if (isPresent(vc) && vc.templateElement === n) {\n          foundVc = vc;\n        }\n        if (isPresent(contentTag) && contentTag.contentStartElement === n) {\n          foundContentTag = contentTag;\n        }\n      }\n      return new _Root(n, foundVc, foundContentTag);\n    });\n\n    return this.roots;\n  }\n}\n\n// Projects the light DOM into the shadow DOM\nfunction redistributeNodes(contents:List<Content>, nodes:List) {\n  for (var i = 0; i < contents.length; ++i) {\n    var content = contents[i];\n    var select = content.select;\n    var matchSelector = (n) => DOM.elementMatches(n, select);\n\n    // Empty selector is identical to <content/>\n    if (select.length === 0) {\n      content.insert(nodes);\n      ListWrapper.clear(nodes);\n    } else {\n      var matchingNodes = ListWrapper.filter(nodes, matchSelector);\n      content.insert(matchingNodes);\n      ListWrapper.removeAll(nodes, matchingNodes);\n    }\n  }\n}\n"]}