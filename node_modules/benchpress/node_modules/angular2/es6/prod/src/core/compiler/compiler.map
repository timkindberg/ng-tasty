{"version":3,"sources":["compiler.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,UAAS,CAAC,KAAO,cAAY,CAAC;AACtC,KAAO,EAAC,IAAG;AAAG,QAAM;AAAG,UAAQ;AAAG,cAAY;AAAG,eAAa;AAAG,UAAQ,CAAC,KAAO,2BAAyB,CAAC;AAC3G,KAAO,EAAC,OAAM;AAAG,eAAa,CAAC,KAAO,4BAA0B,CAAC;AACjE,KAAO,EAAC,IAAG;AAAG,YAAU;AAAG,IAAE;AAAG,WAAS,CAAC,KAAO,iCAA+B,CAAC;AAEjF,KAAO,EAAC,eAAc;AAAG,OAAK,CAAC,KAAO,4BAA0B,CAAC;AAEjE,KAAO,EAAC,uBAAsB,CAAC,KAAO,8BAA4B,CAAC;AACnE,KAAO,EAAC,SAAQ,CAAC,KAAO,SAAO,CAAC;AAChC,KAAO,EAAC,eAAc,CAAC,KAAO,8BAA4B,CAAC;AAC3D,KAAO,EAAC,cAAa,CAAC,KAAO,6BAA2B,CAAC;AACzD,KAAO,EAAC,kBAAiB,CAAC,KAAO,2BAAyB,CAAC;AAC3D,KAAO,EAAC,cAAa,CAAC,KAAO,oBAAkB,CAAC;AAChD,KAAO,EAAC,gBAAe,CAAC,KAAO,sBAAoB,CAAC;AACpD,KAAO,EAAC,QAAO,CAAC,KAAO,0BAAwB,CAAC;AAChD,KAAO,EAAC,iBAAgB,CAAC,KAAO,wBAAsB,CAAC;AACvD,KAAO,EAAC,WAAU,CAAC,KAAO,0BAAwB,CAAC;AACnD,KAAO,EAAC,kBAAiB,CAAC,KAAO,yBAAuB,CAAC;AACzD,KAAO,EAAC,WAAU,CAAC,KAAO,iBAAe,CAAC;AAC1C,KAAO,EAAC,YAAW,CAAC,KAAO,kBAAgB,CAAC;AAQ5C,KAAO,MAAM,cAAY;AAEvB,YAAU,CAAE,AAAD,CAAG;AACZ,OAAG,OAAO,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;EACnC;AAAA,AAEA,IAAE,CAAE,SAAQ,AAAK,CAAG,CAAA,SAAQ,AAAU,CAAG;AACvC,aAAS,IAAI,AAAC,CAAC,IAAG,OAAO,CAAG,UAAQ,CAAG,UAAQ,CAAC,CAAC;EACnD;AAAA,AAEA,IAAE,CAAE,SAAQ,AAAK,CAAa;AAC5B,AAAI,MAAA,CAAA,MAAK,EAAI,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,OAAO,CAAG,UAAQ,CAAC,CAAC;AACnD,SAAO,CAAA,cAAa,AAAC,CAAC,MAAK,CAAC,CAAC;EAC/B;AAAA,AAEA,MAAI,CAAE,AAAD,CAAG;AACN,aAAS,MAAM,AAAC,CAAC,IAAG,OAAO,CAAC,CAAC;EAC/B;AAAA,AACF;AAAA,AA7CA,KAAK,eAAe,AAAC,8BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAyBzB,WAAS,AAAC,EAAC,EAzBqC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,2CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAgCV,IAAG,IAAa,SAAQ,GAhCS;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,2CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAoCV,IAAG,GApC8B;EAAC,CAAC,CAAC,CAAC;AAqDrD,KAAO,MAAM,SAAO;AAclB,YAAU,CAAE,eAAc,AAAgB,CAC9B,CAAA,cAAa,AAAe,CAC5B,CAAA,MAAK,AAAyB,CAC9B,CAAA,MAAK,AAAO,CACZ,CAAA,KAAI,AAAc,CAClB,CAAA,iBAAgB,AAAmB,CACnC,CAAA,gBAAe,AAAkB,CACjC,CAAA,kBAAiB,AAAoB,CACrC,CAAA,WAAU,AAAa,CACvB,CAAA,YAAW,AAAc,CAAG;AACtC,OAAG,iBAAiB,EAAI,gBAAc,CAAC;AACvC,OAAG,QAAQ,EAAI,OAAK,CAAC;AACrB,OAAG,QAAQ,EAAI,OAAK,CAAC;AACrB,OAAG,eAAe,EAAI,MAAI,CAAC;AAC3B,OAAG,gBAAgB,EAAI,eAAa,CAAC;AACrC,OAAG,WAAW,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;AACrC,OAAG,mBAAmB,EAAI,kBAAgB,CAAC;AAC3C,OAAG,kBAAkB,EAAI,iBAAe,CAAC;AACzC,OAAG,oBAAoB,EAAI,mBAAiB,CAAC;AAC7C,OAAG,aAAa,EAAI,YAAU,CAAC;AAC/B,OAAG,QAAQ,EAAI,CAAA,WAAU,QAAQ,AAAC,CAAC,IAAG,CAAG,KAAG,CAAC,CAAC;AAC9C,OAAG,cAAc,EAAI,aAAW,CAAC;EACnC;AAAA,AAEA,YAAU,CAAE,SAAQ,AAAK,CAAG,CAAA,QAAO,AAAU,CAAqB;AAChE,AAAI,MAAA,CAAA,WAAU,EAAI,CAAA,WAAU,IAAI,AAAC,CAAC,IAAG,mBAAmB,AAAC,CAAC,QAAO,CAAC,CAChE,EAAC,CAAA,IAAM,CAAA,IAAG,QAAQ,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC,CAAC;AAE9B,AAAI,MAAA,CAAA,WAAU,EAAI,CAAA,IAAG,QAAQ,KAAK,AAAC,CAAC,SAAQ,CAAC,CAAC;AAE9C,AAAI,MAAA,CAAA,WAAU,EAAI,CAAA,IAAG,gBAAgB,eAAe,AAAC,CAAC,QAAO,CAAC,CAAC;AAE/D,SAAO,CAAA,kBAAiB,AAAC,CAAC,IAAG,iBAAiB,CAAG,CAAA,IAAG,QAAQ,CAAG,YAAU,CAAG,YAAU,CACpF,CAAA,IAAG,mBAAmB,CAAG,YAAU,CAAG,CAAA,IAAG,cAAc,CAAC,CAAC;EAC7D;AAAA,AAEA,QAAM,CAAE,SAAQ,AAAM,CAAsB;AAC1C,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,IAAG,SAAS,AAAC,CAAC,SAAQ,CAAC,CAAC;AACxC,SAAO,CAAA,cAAa,UAAU,AAAC,CAAC,SAAQ,CAAC,CAAA,CAAI,UAAQ,EAAI,CAAA,cAAa,QAAQ,AAAC,CAAC,SAAQ,CAAC,CAAC;EAC5F;AAAA,AAGA,SAAO,CAAE,SAAQ,AAAM,CAAG;AACxB,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,IAAG,eAAe,IAAI,AAAC,CAAC,SAAQ,CAAC,CAAC;AAClD,OAAI,SAAQ,AAAC,CAAC,SAAQ,CAAC,CAAG;AAGxB,WAAO,UAAQ,CAAC;IAClB;AAAA,AAEI,MAAA,CAAA,SAAQ,EAAI,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,WAAW,CAAG,UAAQ,CAAC,CAAC;AAC1D,OAAI,SAAQ,AAAC,CAAC,SAAQ,CAAC,CAAG;AAIxB,WAAO,UAAQ,CAAC;IAClB;AAAA,AAEI,MAAA,CAAA,QAAO,EAAI,CAAA,IAAG,kBAAkB,QAAQ,AAAC,CAAC,SAAQ,CAAC,CAAC;AAExD,AAAI,MAAA,CAAA,YAAW,EAAI,CAAA,IAAG,oBAAoB,OAAO,AAAC,CAAC,SAAQ,CAAC,CAAC;AAC7D,AAAI,MAAA,CAAA,OAAM,EAAI,CAAA,IAAG,aAAa,QAAQ,AAAC,CAAC,IAAG,QAAQ,CAAG,aAAW,CAAC,CAAC;AACnE,OAAG,gBAAgB,WAAW,AAAC,CAAC,QAAO,CAAG,QAAM,CAAC,CAAC;AAElD,AAAI,MAAA,CAAA,UAAS,EAAI,CAAA,IAAG,gBAAgB,KAAK,AAAC,CAAC,QAAO,CAAC,CAAC;AAEpD,OAAI,cAAa,UAAU,AAAC,CAAC,UAAS,CAAC,CAAG;AACxC,cAAQ,EAAI,CAAA,cAAa,KAAK,AAAC,CAAC,UAAS,CACvC,EAAC,EAAC,IAAM,CAAA,IAAG,iBAAiB,AAAC,CAAC,QAAO,CAAG,GAAC,CAAG,UAAQ,CAAC,CACrD,EAAC,CAAA,IAAM;AAAE,YAAM,IAAI,cAAY,AAAC,CAAC,mCAAmC,SAAQ,AAAC,CAAC,SAAQ,CAAC,EAAE,CAAC,CAAC;MAAE,CAC/F,CAAC;AACD,eAAS,IAAI,AAAC,CAAC,IAAG,WAAW,CAAG,UAAQ,CAAG,UAAQ,CAAC,CAAC;AACrD,WAAO,UAAQ,CAAC;IAClB;AAAA,AAEA,SAAO,CAAA,IAAG,iBAAiB,AAAC,CAAC,QAAO,CAAG,WAAS,CAAG,UAAQ,CAAC,CAAC;EAC/D;AAAA,AAGA,iBAAe,CAAE,QAAO,AAAU,CAAG,CAAA,UAAS,CAAG,CAAA,SAAQ,AAAM,CAAG;AAChE,AAAI,MAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,IAAG,YAAY,AAAC,CAAC,SAAQ,CAAG,SAAO,CAAC,CAAC,CAAC;AACzE,AAAI,MAAA,CAAA,eAAc,CAAC;AAEnB,MAAI;AACF,oBAAc,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,UAAS,CAAG,CAAA,SAAQ,AAAC,CAAC,SAAQ,CAAC,CAAC,CAAC;IACtE,CAAE,OAAM,EAAC,CAAG;AACV,WAAO,CAAA,cAAa,OAAO,AAAC,CAAC,EAAC,CAAC,CAAC;IAClC;AAAA,AAEI,MAAA,CAAA,SAAQ,EAAI,CAAA,eAAc,CAAE,CAAA,CAAC,mBAAmB,CAAC;AAIrD,OAAG,eAAe,IAAI,AAAC,CAAC,SAAQ,CAAG,UAAQ,CAAC,CAAC;AAC7C,aAAS,OAAO,AAAC,CAAC,IAAG,WAAW,CAAG,UAAQ,CAAC,CAAC;AAG7C,AAAI,MAAA,CAAA,gBAAe,EAAI,GAAC,CAAC;AACzB,QAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,eAAc,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AAC/C,AAAI,QAAA,CAAA,EAAC,EAAI,CAAA,eAAc,CAAE,CAAA,CAAC,CAAC;AAC3B,SAAI,EAAC,cAAc,CAAG;AACpB,WAAG,wBAAwB,AAAC,CAAC,EAAC,CAAG,iBAAe,CAAC,CAAC;MACpD;AAAA,IACF;AAAA,AAEA,OAAI,SAAQ,cAAc,OAAO,EAAI,EAAA,CAAG;AAEtC,AAAI,QAAA,CAAA,aAAY,EAAI,UAAQ,CAAC;AAC7B,cAAQ,EAAI,CAAA,cAAa,IAAI,AAAC,CAAC,aAAY,cAAc,CAAC,KAAK,AAAC,CAAC,CAAC,CAAA,IAAM,cAAY,CAAC,CAAC;IACxF;AAAA,AAEA,OAAI,gBAAe,OAAO,EAAI,EAAA,CAAG;AAG/B,WAAO,CAAA,cAAa,KAAK,AAAC,CAAC,cAAa,IAAI,AAAC,CAAC,gBAAe,CAAC,CAC5D,EAAC,CAAA,IAAM,UAAQ,CACf,EAAC,CAAA,IAAM;AAAE,YAAM,IAAI,cAAY,AAAC,CAAC,GAAG,CAAA,QAAQ,yBAA0B,SAAQ,AAAC,CAAC,SAAQ,CAAC,EAAE,CAAC,CAAC;MAAE,CACjG,CAAC;IACH;AAAA,AAEA,SAAO,UAAQ,CAAC;EAClB;AAAA,AAEA,wBAAsB,CAAE,EAAC,AAAgB,CAAG,CAAA,QAAO,AAAe,CAAG;AACnE,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,IAAG,SAAS,AAAC,CAAC,EAAC,mBAAmB,KAAK,CAAC,CAAC;AAEzD,OAAI,cAAa,UAAU,AAAC,CAAC,SAAQ,CAAC,CAAG;AACvC,gBAAU,KAAK,AAAC,CACd,QAAO,CACP,CAAA,SAAQ,KAAK,AAAC,CAAC,SAAS,EAAC,CAAG;AAAE,SAAC,uBAAuB,gBAAgB,EAAI,GAAC,CAAC;MAAC,CAAC,CAChF,CAAC;IACH,KAAO;AACL,OAAC,uBAAuB,gBAAgB,EAAI,UAAQ,CAAC;IACvD;AAAA,EACF;AAAA,AAEA,mBAAiB,CAAE,QAAO,AAAU,CAAc;AAChD,OAAI,OAAM,AAAC,CAAC,QAAO,WAAW,CAAC;AAAG,WAAO,GAAC,CAAC;AAAA,AAEvC,MAAA,CAAA,UAAS,EAAI,GAAC,CAAC;AACnB,OAAG,aAAa,AAAC,CAAC,QAAO,WAAW,CAAG,WAAS,CAAC,CAAC;AAElD,SAAO,WAAS,CAAC;EACnB;AAAA,AAEA,aAAW,CAAE,IAAG,AAAU,CAAG,CAAA,GAAE,AAAW,CAAG;AAC3C,QAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACpC,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,IAAG,CAAE,CAAA,CAAC,CAAC;AAClB,SAAI,WAAU,OAAO,AAAC,CAAC,IAAG,CAAC,CAAG;AAC5B,WAAG,aAAa,AAAC,CAAC,IAAG,CAAG,IAAE,CAAC,CAAC;MAC9B,KAAO;AACL,kBAAU,KAAK,AAAC,CAAC,GAAE,CAAG,KAAG,CAAC,CAAC;MAC7B;AAAA,IACF;AAAA,EACF;AAAA,AAEF;AAAA,AAhOA,KAAK,eAAe,AAAC,yBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAoDzB,WAAS,AAAC,EAAC,EApDqC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,wBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAmEI,eAAc,IACf,cAAa,IACpB,uBAAsB,IACvB,MAAK,IACN,aAAY,IACC,iBAAgB,IACjB,gBAAe,IACb,kBAAiB,IACxB,WAAU,IACT,YAAW,GA5EU;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,8CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA2FF,IAAG,IAAa,QAAO,GA3FE;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,0CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAuGL,IAAG,GAvGyB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,2CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA6GJ,IAAG,GA7GwB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,mDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAkJG,QAAO,QAA0B,IAAG,GAlJhB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,0DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA8LI,cAAa,IA/L3C,MAAK,YAAY,AA+LuC,CAAA,IAAG,CAAE,QAAM,CAAC,AA/LhC,GACa;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,qDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA2MK,QAAO,GA3MW;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,+CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,YAAY,AAqNG,CAAA,IAAG,CArNvB,CAAA,MAAK,KAAK,KAqNkB,AArNQ,IAApC,MAAK,YAAY,AAqNkB,CAAA,IAAG,CAAE,KAAG,CAAC,AArNR,GACa;EAAC,CAAC,CAAC,CAAC;AAkOrD","file":"/Users/tbosch/projects/angular2/modules/angular2/src/core/compiler/compiler.js","sourcesContent":["import {Injectable} from 'angular2/di';\nimport {Type, isBlank, isPresent, BaseException, normalizeBlank, stringify} from 'angular2/src/facade/lang';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {List, ListWrapper, Map, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ChangeDetection, Parser} from 'angular2/change_detection';\n\nimport {DirectiveMetadataReader} from './directive_metadata_reader';\nimport {ProtoView} from './view';\nimport {CompilePipeline} from './pipeline/compile_pipeline';\nimport {CompileElement} from './pipeline/compile_element';\nimport {createDefaultSteps} from './pipeline/default_steps';\nimport {TemplateLoader} from './template_loader';\nimport {TemplateResolver} from './template_resolver';\nimport {Template} from '../annotations/template';\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\nimport {CompileStep} from './pipeline/compile_step';\nimport {ComponentUrlMapper} from './component_url_mapper';\nimport {UrlResolver} from './url_resolver';\nimport {CssProcessor} from './css_processor';\n\n/**\n * Cache that stores the ProtoView of the template of a component.\n * Used to prevent duplicate work and resolve cyclic dependencies.\n * @publicModule angular2/angular2\n */\n@Injectable()\nexport class CompilerCache {\n  _cache:Map;\n  constructor() {\n    this._cache = MapWrapper.create();\n  }\n\n  set(component:Type, protoView:ProtoView) {\n    MapWrapper.set(this._cache, component, protoView);\n  }\n\n  get(component:Type):ProtoView {\n    var result = MapWrapper.get(this._cache, component);\n    return normalizeBlank(result);\n  }\n\n  clear() {\n    MapWrapper.clear(this._cache);\n  }\n}\n\n/**\n * The compiler loads and translates the html templates of components into\n * nested ProtoViews. To decompose its functionality it uses\n * the CompilePipeline and the CompileSteps.\n * @publicModule angular2/angular2\n */\n@Injectable()\nexport class Compiler {\n  _reader: DirectiveMetadataReader;\n  _parser:Parser;\n  _compilerCache:CompilerCache;\n  _changeDetection:ChangeDetection;\n  _templateLoader:TemplateLoader;\n  _compiling:Map<Type, Promise>;\n  _shadowDomStrategy: ShadowDomStrategy;\n  _templateResolver: TemplateResolver;\n  _componentUrlMapper: ComponentUrlMapper;\n  _urlResolver: UrlResolver;\n  _appUrl: string;\n  _cssProcessor: CssProcessor;\n\n  constructor(changeDetection:ChangeDetection,\n              templateLoader:TemplateLoader,\n              reader: DirectiveMetadataReader,\n              parser:Parser,\n              cache:CompilerCache,\n              shadowDomStrategy: ShadowDomStrategy,\n              templateResolver: TemplateResolver,\n              componentUrlMapper: ComponentUrlMapper,\n              urlResolver: UrlResolver,\n              cssProcessor: CssProcessor) {\n    this._changeDetection = changeDetection;\n    this._reader = reader;\n    this._parser = parser;\n    this._compilerCache = cache;\n    this._templateLoader = templateLoader;\n    this._compiling = MapWrapper.create();\n    this._shadowDomStrategy = shadowDomStrategy;\n    this._templateResolver = templateResolver;\n    this._componentUrlMapper = componentUrlMapper;\n    this._urlResolver = urlResolver;\n    this._appUrl = urlResolver.resolve(null, './');\n    this._cssProcessor = cssProcessor;\n  }\n\n  createSteps(component:Type, template: Template):List<CompileStep> {\n    var dirMetadata = ListWrapper.map(this._flattenDirectives(template),\n      (d) => this._reader.read(d));\n\n    var cmpMetadata = this._reader.read(component);\n\n    var templateUrl = this._templateLoader.getTemplateUrl(template);\n\n    return createDefaultSteps(this._changeDetection, this._parser, cmpMetadata, dirMetadata,\n      this._shadowDomStrategy, templateUrl, this._cssProcessor);\n  }\n\n  compile(component: Type):Promise<ProtoView> {\n    var protoView = this._compile(component);\n    return PromiseWrapper.isPromise(protoView) ? protoView : PromiseWrapper.resolve(protoView);\n  }\n\n  // TODO(vicb): union type return ProtoView or Promise<ProtoView>\n  _compile(component: Type) {\n    var protoView = this._compilerCache.get(component);\n    if (isPresent(protoView)) {\n      // The component has already been compiled into a ProtoView,\n      // returns a resolved Promise.\n      return protoView;\n    }\n\n    var pvPromise = MapWrapper.get(this._compiling, component);\n    if (isPresent(pvPromise)) {\n      // The component is already being compiled, attach to the existing Promise\n      // instead of re-compiling the component.\n      // It happens when a template references a component multiple times.\n      return pvPromise;\n    }\n\n    var template = this._templateResolver.resolve(component);\n\n    var componentUrl = this._componentUrlMapper.getUrl(component);\n    var baseUrl = this._urlResolver.resolve(this._appUrl, componentUrl);\n    this._templateLoader.setBaseUrl(template, baseUrl);\n\n    var tplElement = this._templateLoader.load(template);\n\n    if (PromiseWrapper.isPromise(tplElement)) {\n      pvPromise = PromiseWrapper.then(tplElement,\n        (el) => this._compileTemplate(template, el, component),\n        (_) => { throw new BaseException(`Failed to load the template for ${stringify(component)}`); }\n      );\n      MapWrapper.set(this._compiling, component, pvPromise);\n      return pvPromise;\n    }\n\n    return this._compileTemplate(template, tplElement, component);\n  }\n\n  // TODO(vicb): union type return ProtoView or Promise<ProtoView>\n  _compileTemplate(template: Template, tplElement, component: Type) {\n    var pipeline = new CompilePipeline(this.createSteps(component, template));\n    var compileElements;\n\n    try {\n      compileElements = pipeline.process(tplElement, stringify(component));\n    } catch(ex) {\n      return PromiseWrapper.reject(ex);\n    }\n\n    var protoView = compileElements[0].inheritedProtoView;\n\n    // Populate the cache before compiling the nested components,\n    // so that components can reference themselves in their template.\n    this._compilerCache.set(component, protoView);\n    MapWrapper.delete(this._compiling, component);\n\n    // Compile all the components from the template\n    var nestedPVPromises = [];\n    for (var i = 0; i < compileElements.length; i++) {\n      var ce = compileElements[i];\n      if (ce.hasNestedView) {\n        this._compileNestedProtoView(ce, nestedPVPromises);\n      }\n    }\n\n    if (protoView.stylePromises.length > 0) {\n      // The protoView is ready after all asynchronous styles are ready\n      var syncProtoView = protoView;\n      protoView = PromiseWrapper.all(syncProtoView.stylePromises).then((_) => syncProtoView);\n    }\n\n    if (nestedPVPromises.length > 0) {\n      // Returns ProtoView Promise when there are any asynchronous nested ProtoViews.\n      // The promise will resolved after nested ProtoViews are compiled.\n      return PromiseWrapper.then(PromiseWrapper.all(nestedPVPromises),\n        (_) => protoView,\n        (e) => { throw new BaseException(`${e.message} -> Failed to compile ${stringify(component)}`); }\n      );\n    }\n\n    return protoView;\n  }\n\n  _compileNestedProtoView(ce: CompileElement, promises: List<Promise>) {\n    var protoView = this._compile(ce.componentDirective.type);\n\n    if (PromiseWrapper.isPromise(protoView)) {\n      ListWrapper.push(\n        promises,\n        protoView.then(function(pv) { ce.inheritedElementBinder.nestedProtoView = pv;})\n      );\n    } else {\n      ce.inheritedElementBinder.nestedProtoView = protoView;\n    }\n  }\n\n  _flattenDirectives(template: Template):List<Type> {\n    if (isBlank(template.directives)) return [];\n\n    var directives = [];\n    this._flattenList(template.directives, directives);\n\n    return directives;\n  }\n\n  _flattenList(tree:List<any>, out:List<Type>) {\n    for (var i = 0; i < tree.length; i++) {\n      var item = tree[i];\n      if (ListWrapper.isList(item)) {\n        this._flattenList(item, out);\n      } else {\n        ListWrapper.push(out, item);\n      }\n    }\n  }\n\n}\n\n\n"]}