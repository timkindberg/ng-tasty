{"version":3,"sources":["change_detection_jit_generator.es6"],"names":[],"mappings":"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","file":"/Users/tbosch/projects/angular2/modules/angular2/src/change_detection/change_detection_jit_generator.es6","sourcesContent":["import {isPresent, isBlank, BaseException, Type} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {AbstractChangeDetector} from './abstract_change_detector';\nimport {ChangeDetectionUtil} from './change_detection_util';\n\nimport {\n  ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_LOCAL,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_PIPE,\n  RECORD_TYPE_BINDING_PIPE,\n  RECORD_TYPE_INTERPOLATE\n  } from './proto_record';\n\n/**\n * The code generator takes a list of proto records and creates a function/class\n * that \"emulates\" what the developer would write by hand to implement the same\n * kind of behaviour.\n *\n * For example: An expression `address.city` will result in the following class:\n *\n * var ChangeDetector0 = function ChangeDetector0(dispatcher, protos) {\n *   AbstractChangeDetector.call(this);\n *   this.dispatcher = dispatcher;\n *   this.protos = protos;\n *\n *   this.context = ChangeDetectionUtil.unitialized();\n *   this.address0 = ChangeDetectionUtil.unitialized();\n *   this.city1 = ChangeDetectionUtil.unitialized();\n * }\n * ChangeDetector0.prototype = Object.create(AbstractChangeDetector.prototype);\n *\n * ChangeDetector0.prototype.detectChangesInRecords = function(throwOnChange) {\n *   var address0;\n *   var city1;\n *   var change;\n *   var changes = null;\n *   var temp;\n *   var context = this.context;\n *\n *   address0 = context.address;\n *   if (address0 !== this.address0) {\n *     this.address0 = address0;\n *   }\n *\n *   city1 = address0.city;\n *   if (city1 !== this.city1) {\n *     changes = ChangeDetectionUtil.addRecord(changes,\n *       ChangeDetectionUtil.simpleChangeRecord(this.protos[1].bindingMemento, this.city1, city1));\n *     this.city1 = city1;\n *   }\n *\n *   if (changes.length > 0) {\n *     if(throwOnChange) ChangeDetectionUtil.throwOnChange(this.protos[1], changes[0]);\n *     this.dispatcher.onRecordChange('address.city', changes);\n *     changes = null;\n *   }\n * }\n *\n * ChangeDetector0.prototype.notifyOnAllChangesDone = function() {}\n *\n * ChangeDetector0.prototype.hydrate = function(context, locals) {\n *   this.context = context;\n *   this.locals = locals;\n * }\n *\n * ChangeDetector0.prototype.dehydrate = function(context) {\n *   this.context = ChangeDetectionUtil.unitialized();\n *   this.address0 = ChangeDetectionUtil.unitialized();\n *   this.city1 = ChangeDetectionUtil.unitialized();\n *   this.locals = null;\n * }\n *\n * ChangeDetector0.prototype.hydrated = function() {\n *   return this.context !== ChangeDetectionUtil.unitialized();\n * }\n *\n * return ChangeDetector0;\n *\n *\n * The only thing the generated class depends on is the super class AbstractChangeDetector.\n *\n * The implementation comprises two parts:\n * * ChangeDetectorJITGenerator has the logic of how everything fits together.\n * * template functions (e.g., constructorTemplate) define what code is generated.\n*/\n\nvar ABSTRACT_CHANGE_DETECTOR = \"AbstractChangeDetector\";\nvar UTIL = \"ChangeDetectionUtil\";\nvar DISPATCHER_ACCESSOR = \"this.dispatcher\";\nvar PIPE_REGISTRY_ACCESSOR = \"this.pipeRegistry\";\nvar PROTOS_ACCESSOR = \"this.protos\";\nvar MEMENTOS_ACCESSOR = \"this.directiveMementos\";\nvar CONTEXT_ACCESSOR = \"this.context\";\nvar CHANGE_LOCAL = \"change\";\nvar CHANGES_LOCAL = \"changes\";\nvar LOCALS_ACCESSOR = \"this.locals\";\nvar TEMP_LOCAL = \"temp\";\n\nfunction typeTemplate(type:string, cons:string, detectChanges:string,\n                      notifyOnAllChangesDone:string, setContext:string):string {\n  return `\n${cons}\n${detectChanges}\n${notifyOnAllChangesDone}\n${setContext};\n\nreturn function(dispatcher, pipeRegistry) {\n  return new ${type}(dispatcher, pipeRegistry, protos, directiveMementos);\n}\n`;\n}\n\nfunction constructorTemplate(type:string, fieldsDefinitions:string):string {\n  return `\nvar ${type} = function ${type}(dispatcher, pipeRegistry, protos, directiveMementos) {\n${ABSTRACT_CHANGE_DETECTOR}.call(this);\n${DISPATCHER_ACCESSOR} = dispatcher;\n${PIPE_REGISTRY_ACCESSOR} = pipeRegistry;\n${PROTOS_ACCESSOR} = protos;\n${MEMENTOS_ACCESSOR} = directiveMementos;\n${fieldsDefinitions}\n}\n\n${type}.prototype = Object.create(${ABSTRACT_CHANGE_DETECTOR}.prototype);\n`;\n}\n\nfunction pipeOnDestroyTemplate(pipeNames:List) {\n  return pipeNames.map((p) => `${p}.onDestroy()`).join(\"\\n\");\n}\n\nfunction hydrateTemplate(type:string, fieldsDefinitions:string, pipeOnDestroy:string):string {\n  return `\n${type}.prototype.hydrate = function(context, locals) {\n  ${CONTEXT_ACCESSOR} = context;\n  ${LOCALS_ACCESSOR} = locals;\n}\n${type}.prototype.dehydrate = function() {\n  ${pipeOnDestroy}\n  ${fieldsDefinitions}\n  ${LOCALS_ACCESSOR} = null;\n}\n${type}.prototype.hydrated = function() {\n  return ${CONTEXT_ACCESSOR} !== ${UTIL}.unitialized();\n}\n`;\n}\n\nfunction detectChangesTemplate(type:string, body:string):string {\n  return `\n${type}.prototype.detectChangesInRecords = function(throwOnChange) {\n  ${body}\n}\n`;\n}\n\nfunction notifyOnAllChangesDoneTemplate(type:string, body:string):string {\n  return `\n${type}.prototype.notifyOnAllChangesDone = function() {\n  ${body}\n}\n`;\n}\n\nfunction onAllChangesDoneTemplate(index:number):string {\n  return `${DISPATCHER_ACCESSOR}.onAllChangesDone(${MEMENTOS_ACCESSOR}[${index}]);`;\n}\n\n\nfunction bodyTemplate(localDefinitions:string, changeDefinitions:string, records:string):string {\n  return `\n${localDefinitions}\n${changeDefinitions}\nvar ${TEMP_LOCAL};\nvar ${CHANGE_LOCAL};\nvar ${CHANGES_LOCAL} = null;\n\ncontext = ${CONTEXT_ACCESSOR};\n${records}\n`;\n}\n\nfunction notifyTemplate(index:number):string{\n  return  `\nif (${CHANGES_LOCAL} && ${CHANGES_LOCAL}.length > 0) {\n  if(throwOnChange) ${UTIL}.throwOnChange(${PROTOS_ACCESSOR}[${index}], ${CHANGES_LOCAL}[0]);\n  ${DISPATCHER_ACCESSOR}.onRecordChange(${PROTOS_ACCESSOR}[${index}].directiveMemento, ${CHANGES_LOCAL});\n  ${CHANGES_LOCAL} = null;\n}\n`;\n}\n\nfunction pipeCheckTemplate(context:string, bindingPropagationConfig:string, pipe:string, pipeType:string,\n                                  value:string, change:string, addRecord:string, notify:string):string{\n  return `\nif (${pipe} === ${UTIL}.unitialized()) {\n  ${pipe} = ${PIPE_REGISTRY_ACCESSOR}.get('${pipeType}', ${context}, ${bindingPropagationConfig});\n} else if (!${pipe}.supports(${context})) {\n  ${pipe}.onDestroy();\n  ${pipe} = ${PIPE_REGISTRY_ACCESSOR}.get('${pipeType}', ${context}, ${bindingPropagationConfig});\n}\n\n${CHANGE_LOCAL} = ${pipe}.transform(${context});\nif (! ${UTIL}.noChangeMarker(${CHANGE_LOCAL})) {\n  ${value} = ${CHANGE_LOCAL};\n  ${change} = true;\n  ${addRecord}\n}\n${notify}\n`;\n}\n\nfunction referenceCheckTemplate(assignment, newValue, oldValue, change, addRecord, notify) {\n  return `\n${assignment}\nif (${newValue} !== ${oldValue} || (${newValue} !== ${newValue}) && (${oldValue} !== ${oldValue})) {\n  ${change} = true;\n  ${addRecord}\n  ${oldValue} = ${newValue};\n}\n${notify}\n`;\n}\n\nfunction assignmentTemplate(field:string, value:string) {\n  return `${field} = ${value};`;\n}\n\nfunction localDefinitionsTemplate(names:List):string {\n  return names.map((n) => `var ${n};`).join(\"\\n\");\n}\n\nfunction changeDefinitionsTemplate(names:List):string {\n  return names.map((n) => `var ${n} = false;`).join(\"\\n\");\n}\n\nfunction fieldDefinitionsTemplate(names:List):string {\n  return names.map((n) => `${n} = ${UTIL}.unitialized();`).join(\"\\n\");\n}\n\nfunction ifChangedGuardTemplate(changeNames:List, body:string):string {\n  var cond = changeNames.join(\" || \");\n  return `\nif (${cond}) {\n  ${body}\n}\n`;\n}\n\nfunction addSimpleChangeRecordTemplate(protoIndex:number, oldValue:string, newValue:string) {\n  return `${CHANGES_LOCAL} = ${UTIL}.addRecord(${CHANGES_LOCAL},\n    ${UTIL}.simpleChangeRecord(${PROTOS_ACCESSOR}[${protoIndex}].bindingMemento, ${oldValue}, ${newValue}));`;\n}\n\n\nexport class ChangeDetectorJITGenerator {\n  typeName:string;\n  records:List<ProtoRecord>;\n  directiveMementos:List;\n  localNames:List<String>;\n  changeNames:List<String>;\n  fieldNames:List<String>;\n  pipeNames:List<String>;\n\n  constructor(typeName:string, records:List<ProtoRecord>, directiveMementos:List) {\n    this.typeName = typeName;\n    this.records = records;\n    this.directiveMementos = directiveMementos;\n\n    this.localNames = this.getLocalNames(records);\n    this.changeNames = this.getChangeNames(this.localNames);\n    this.fieldNames = this.getFieldNames(this.localNames);\n    this.pipeNames = this.getPipeNames(this.localNames);\n  }\n\n  getLocalNames(records:List<ProtoRecord>):List<String> {\n    var index = 0;\n    var names = records.map((r) => {\n      var sanitizedName = r.name.replace(new RegExp(\"\\\\W\", \"g\"), '');\n      return `${sanitizedName}${index++}`\n    });\n    return [\"context\"].concat(names);\n  }\n\n  getChangeNames(localNames:List<String>):List<String> {\n    return localNames.map((n) => `change_${n}`);\n  }\n\n  getFieldNames(localNames:List<String>):List<String> {\n    return localNames.map((n) => `this.${n}`);\n  }\n\n  getPipeNames(localNames:List<String>):List<String> {\n    return localNames.map((n) => `this.${n}_pipe`);\n  }\n\n  generate():Function {\n    var text = typeTemplate(this.typeName, this.genConstructor(), this.genDetectChanges(),\n      this.genNotifyOnAllChangesDone(), this.genHydrate());\n    return new Function('AbstractChangeDetector', 'ChangeDetectionUtil', 'protos', 'directiveMementos', text)\n      (AbstractChangeDetector, ChangeDetectionUtil, this.records, this.directiveMementos);\n  }\n\n  genConstructor():string {\n    return constructorTemplate(this.typeName, this.genFieldDefinitions());\n  }\n\n  genHydrate():string {\n    return hydrateTemplate(this.typeName, this.genFieldDefinitions(),\n      pipeOnDestroyTemplate(this.getNonNullPipeNames()));\n  }\n\n  genFieldDefinitions() {\n    var fields = [];\n    fields = fields.concat(this.fieldNames);\n    fields = fields.concat(this.getNonNullPipeNames());\n    return fieldDefinitionsTemplate(fields);\n  }\n\n  getNonNullPipeNames():List<String> {\n    var pipes = [];\n    this.records.forEach((r) => {\n      if (r.mode === RECORD_TYPE_PIPE || r.mode === RECORD_TYPE_BINDING_PIPE) {\n        pipes.push(this.pipeNames[r.selfIndex]);\n      }\n    });\n    return pipes;\n  }\n\n  genDetectChanges():string {\n    var body = this.genBody();\n    return detectChangesTemplate(this.typeName, body);\n  }\n\n  genNotifyOnAllChangesDone():string {\n    var notifications = [];\n    var mementos = this.directiveMementos;\n\n    for (var i = mementos.length - 1; i >= 0; --i) {\n      var memento = mementos[i];\n      if (memento.notifyOnAllChangesDone) {\n        notifications.push(onAllChangesDoneTemplate(i));\n      }\n    }\n\n    return notifyOnAllChangesDoneTemplate(this.typeName, notifications.join(\";\\n\"));\n  }\n\n  genBody():string {\n    var rec = this.records.map((r) => this.genRecord(r)).join(\"\\n\");\n    return bodyTemplate(this.genLocalDefinitions(), this.genChangeDefinitions(), rec);\n  }\n\n  genLocalDefinitions():string {\n    return localDefinitionsTemplate(this.localNames);\n  }\n\n  genChangeDefinitions():string {\n    return changeDefinitionsTemplate(this.changeNames);\n  }\n\n  genRecord(r:ProtoRecord):string {\n    if (r.mode === RECORD_TYPE_PIPE || r.mode === RECORD_TYPE_BINDING_PIPE) {\n      return this.genPipeCheck (r);\n    } else {\n      return this.genReferenceCheck(r);\n    }\n  }\n\n  genPipeCheck(r:ProtoRecord):string {\n    var context = this.localNames[r.contextIndex];\n    var pipe = this.pipeNames[r.selfIndex];\n    var newValue = this.localNames[r.selfIndex];\n    var oldValue = this.fieldNames[r.selfIndex];\n    var change = this.changeNames[r.selfIndex];\n    var bpc = r.mode === RECORD_TYPE_BINDING_PIPE ? \"this.bindingPropagationConfig\" : \"null\";\n\n    var addRecord = addSimpleChangeRecordTemplate(r.selfIndex - 1, oldValue, newValue);\n    var notify = this.genNotify(r);\n\n    return pipeCheckTemplate(context, bpc, pipe, r.name, newValue, change, addRecord, notify);\n  }\n\n  genReferenceCheck(r:ProtoRecord):string {\n    var newValue = this.localNames[r.selfIndex];\n    var oldValue = this.fieldNames[r.selfIndex];\n    var change = this.changeNames[r.selfIndex];\n    var assignment = this.genUpdateCurrentValue(r);\n    var addRecord = addSimpleChangeRecordTemplate(r.selfIndex - 1, oldValue, newValue);\n    var notify = this.genNotify(r);\n\n    var check = referenceCheckTemplate(assignment, newValue, oldValue, change, r.lastInBinding ? addRecord : '', notify);\n    if (r.isPureFunction()) {\n      return this.ifChangedGuard(r, check);\n    } else {\n      return check;\n    }\n  }\n\n  genUpdateCurrentValue(r:ProtoRecord):string {\n    var context = this.localNames[r.contextIndex];\n    var newValue = this.localNames[r.selfIndex];\n    var args = this.genArgs(r);\n\n    switch (r.mode) {\n      case RECORD_TYPE_SELF:\n        return assignmentTemplate(newValue, context);\n\n      case RECORD_TYPE_CONST:\n        return `${newValue} = ${this.genLiteral(r.funcOrValue)}`;\n\n      case RECORD_TYPE_PROPERTY:\n        return assignmentTemplate(newValue, `${context}.${r.name}`);\n\n      case RECORD_TYPE_LOCAL:\n        return assignmentTemplate(newValue, `${LOCALS_ACCESSOR}.get('${r.name}')`);\n\n      case RECORD_TYPE_INVOKE_METHOD:\n        return assignmentTemplate(newValue, `${context}.${r.name}(${args})`);\n\n      case RECORD_TYPE_INVOKE_CLOSURE:\n        return assignmentTemplate(newValue, `${context}(${args})`);\n\n      case RECORD_TYPE_PRIMITIVE_OP:\n        return assignmentTemplate(newValue, `${UTIL}.${r.name}(${args})`);\n\n      case RECORD_TYPE_INTERPOLATE:\n        return assignmentTemplate(newValue, this.genInterpolation(r));\n\n      case RECORD_TYPE_KEYED_ACCESS:\n        var key = this.localNames[r.args[0]];\n        return assignmentTemplate(newValue, `${context}[${key}]`);\n\n      default:\n        throw new BaseException(`Unknown operation ${r.mode}`);\n    }\n  }\n\n  ifChangedGuard(r:ProtoRecord, body:string):string {\n    return ifChangedGuardTemplate(r.args.map((a) => this.changeNames[a]), body);\n  }\n\n  genInterpolation(r:ProtoRecord):string{\n    var res = \"\";\n    for (var i = 0; i < r.args.length; ++i) {\n      res += this.genLiteral(r.fixedArgs[i]);\n      res += \" + \";\n      res += this.localNames[r.args[i]];\n      res += \" + \";\n    }\n    res += this.genLiteral(r.fixedArgs[r.args.length]);\n    return res;\n  }\n\n  genLiteral(value):string {\n    return JSON.stringify(value);\n  }\n\n  genNotify(r):string{\n    return r.lastInDirective ? notifyTemplate(r.selfIndex - 1) : '';\n  }\n\n  genArgs(r:ProtoRecord):string {\n    return r.args.map((arg) => this.localNames[arg]).join(\", \");\n  }\n}\n\n\n\n\n"]}