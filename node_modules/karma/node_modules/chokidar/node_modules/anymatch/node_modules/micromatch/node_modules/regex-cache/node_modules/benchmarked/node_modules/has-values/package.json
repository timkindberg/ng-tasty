{
  "name": "has-values",
  "description": "Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays. ",
  "version": "0.1.3",
  "homepage": "https://github.com/jonschlinkert/has-values",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/has-values.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/has-values/issues"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/jonschlinkert/has-values/blob/master/LICENSE"
  },
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "^4.0.4"
  },
  "keywords": [
    "array",
    "boolean",
    "empty",
    "find",
    "function",
    "has",
    "hasOwn",
    "javascript",
    "js",
    "key",
    "keys",
    "node.js",
    "null",
    "number",
    "object",
    "properties",
    "property",
    "string",
    "type",
    "util",
    "utilities",
    "utility",
    "value"
  ],
  "readme": "# has-values [![NPM version](https://badge.fury.io/js/has-values.svg)](http://badge.fury.io/js/has-values)  [![Build Status](https://travis-ci.org/jonschlinkert/has-values.svg)](https://travis-ci.org/jonschlinkert/has-values) \n\n> Returns true if a value exists, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays. Other libs do this, but I needed one that would optionally _not_ treat zero as empty. Also, this works with booleans and other values that other libs fail to test properly.\n\n## Install with [npm](npmjs.org)\n\n```bash\nnpm i has-values --save\n```\n\n## Running tests\nInstall dev dependencies.\n\n```bash\nnpm i -d && npm test\n```\n\n## Usage\n\n```js\nvar hasValue = require('has-values');\n\nhasValue('a');\n//=> true\n\nhasValue('');\n//=> false\n\nhasValue(1);\n//=> true\n\nhasValue(0);\n//=> false\n\nhasValue(0, true); // treat zero as a value\n//=> true\n\nhasValue({a: 'a'}});\n//=> true\n\nhasValue({}});\n//=> false\n\nhasValue(['a']);\n//=> true\n\nhasValue([]);\n//=> false\n\nhasValue(function(foo) {}); // function length/arity\n//=> true\n\nhasValue(function() {});\n//=> false\n\nhasValue(true);\nhasValue(false);\n//=> true\n```\n\n## isEmpty\n\nTo test for empty values, do:\n\n```js\nfunction isEmpty(o, isZero) {\n  return !hasValue(o, isZero);\n}\n```\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2015 Jon Schlinkert  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on March 24, 2015._",
  "readmeFilename": "README.md",
  "_id": "has-values@0.1.3",
  "dist": {
    "shasum": "ddbd42c3f2934fa5e01b36f3ba317b99b7915081"
  },
  "_from": "has-values@^0.1.2",
  "_resolved": "https://registry.npmjs.org/has-values/-/has-values-0.1.3.tgz"
}
