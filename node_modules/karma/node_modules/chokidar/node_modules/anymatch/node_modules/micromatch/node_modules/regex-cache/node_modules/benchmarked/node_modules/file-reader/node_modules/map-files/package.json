{
  "name": "map-files",
  "description": "Return an object for a glob of files. Pass a `rename` function for the keys, or a `parse` function for the content, allowing it to be used for readable or require-able files.",
  "version": "0.3.0",
  "homepage": "https://github.com/jonschlinkert/map-files",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/map-files.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/map-files/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonschlinkert/map-files/blob/master/LICENSE-MIT"
    }
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "dependencies": {
    "globby": "^0.1.1",
    "relative": "^0.1.6"
  },
  "devDependencies": {
    "gray-matter": "^1.0.1",
    "mocha": "*",
    "should": "^4.3.0"
  },
  "keywords": [
    "dir",
    "directories",
    "directory",
    "dirs",
    "file",
    "filepath",
    "filepaths",
    "files",
    "hash",
    "list",
    "map",
    "mapping",
    "name",
    "object",
    "path",
    "paths"
  ],
  "readme": "# map-files [![NPM version](https://badge.fury.io/js/map-files.svg)](http://badge.fury.io/js/map-files)\n\n> Return an object for a glob of files. Pass a `rename` function for the keys, or a `parse` function for the content, allowing it to be used for readable or require-able files.\n\n## Install\n### Install with [npm](npmjs.org):\n\n```bash\nnpm i map-files --save-dev\n```\n\n## Run tests\n\n```bash\nnpm test\n```\n\n## Usage\n\n```js\nvar files = require('map-files');\nconsole.log(files('templates/*.txt'));\n```\nReturns an object that looks something like:\n\n```js\n{ a: { content: 'AAA', path: 'templates/a.txt' },\n  b: { content: 'BBB', path: 'templates/b.txt' },\n  c: { content: 'CCC', path: 'templates/c.txt' }}\n```\n\n### options.cwd\n\nDefine the current working directory\n\n```js\nfiles('*.txt', {cwd: 'templates'});\n```\n\n### options.name\n\nRename the key of each file object:\n\n```js\nvar templates = files('templates/*.txt', {\n  name: function (filepath) {\n    return path.basename(filepath);\n  }\n});\n```\nReturns something like:\n\n```js\n{ 'a.txt': { content: 'AAA', path: 'templates/a.txt' },\n  'b.txt': { content: 'BBB', path: 'templates/b.txt' },\n  'c.txt': { content: 'CCC', path: 'templates/c.txt' }}\n```\n\n\n### options.read\n\n> Pass a custom `read` function to change the object returned for each file.\n\n\nThe default function reads files and returns a string, but you can do anything\nyou want with the function, like `require` files:\n\n```js\nvar helpers = files('helpers/*.js', {\n  read: function (fp) {\n    return require(path.resolve(fp));\n  }\n});\n//=> { a: [Function: foo], b: [Function: bar], c: [Function: baz] }\n```\n\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2014 Jon Schlinkert  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb](https://github.com/assemble/verb) on December 05, 2014._\n\n[globby]: https://github.com/sindresorhus/globby",
  "readmeFilename": "README.md",
  "_id": "map-files@0.3.0",
  "dist": {
    "shasum": "79ef9434a6258dcee4344d4adda873c5992012d8"
  },
  "_from": "map-files@^0.3.0",
  "_resolved": "https://registry.npmjs.org/map-files/-/map-files-0.3.0.tgz"
}
